{"version":3,"sources":["reducers/rootReducer.js","containers/fetchWeather.js","components/loader/loader.js","components/searchBar.js","components/cityNotFound.js","components/currentWeather/weatherDetails.js","components/currentWeather/CurrentWeather.js","components/currentWeather/CurrentWeatherWrapper.js","components/dailyForecast/NextDay.js","components/dailyForecast/WeatherIcon.js","components/dailyForecast/WeekDay.js","components/dailyForecast/DayTemperature.js","components/dailyForecast/OneDay.js","components/dailyForecast/DailyForecast.js","App.js","registerServiceWorker.js","index.js"],"names":["initState","weather","forecast","dailyForecast","undefined","searchInput","location","appid","loading","rootReducer","state","arguments","length","action","type","Object","objectSpread","cityFound","cod","FetchWeather","_this","this","city","props","weatherForecast","fetch","concat","then","response","json","data","fetchWeather","fetchForecast","_this2","fetchDailyForecast","fetchWeatherDaily","prevProps","Component","connect","dispatch","loader","react_default","a","createElement","className","SearchBar","e","preventDefault","updateLoader","updateWeather","updateSearchInput","target","value","id","onSubmit","handleSubmit","placeholder","aria-describedby","onInput","updateSearchInputValue","defaultValue","inputText","cityNotFound","_ref","locationFirstLetterToUpperCase","charAt","toUpperCase","slice","weatherDetails","name","main","wind","iconUrl","icon","description","src","alt","temp","toFixed","speed","humidity","pressure","currentWeather","hasOwnProperty","currentWeather_weatherDetails","currentWeatherWrapper","CurrentWeather","components_cityNotFound","NextDay","nextDayText","day","WeatherIcon","WeekDay","dayTimestamp","Date","getDay","DayTemperature","fixedTempDay","temperature","OneDay","_this$props","dayData","dailyForecast_NextDay","dt","dailyForecast_WeekDay","dailyForecast_WeatherIcon","dailyForecast_DayTemperature","clouds","width","height","React","DailyForecast","dailyForecastTiles","list","map","item","index","dailyForecast_OneDay","key","App","searchBar","components_loader_loader","CurrentWeatherWrapper","dailyForecast_DailyForecast","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"mNAAMA,EAAY,CACdC,QAAS,GACTC,SAAU,GACVC,mBAAeC,EACfC,YAAa,GACbC,SAAU,cACVC,MAAO,mCACPC,SAAS,GAmDEC,EAhDK,WAA+B,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAR,IAAAO,UAAA,GAAAA,UAAA,GAAtBX,EAAWa,EAAWF,UAAAC,OAAA,EAAAD,UAAA,QAAAP,EAC/C,OAAQS,EAAOC,MACX,IAAK,gBACD,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIT,QAAS,CAACY,EAAOZ,SACjBgB,UAAkC,MAAvBJ,EAAOZ,QAAQiB,IAC1BV,SAAS,IAGjB,IAAK,iBACD,OAAOO,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIR,SAAU,CAACW,EAAOX,UAClBM,SAAS,IAGjB,IAAK,uBACD,OAAOO,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIP,cAAeU,EAAOV,gBAM9B,IAAK,sBACD,OAAOY,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIL,YAAaQ,EAAOR,cAG5B,IAAK,iBACD,OAAOU,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIJ,SAAUO,EAAOP,WAEzB,IAAK,gBACD,OAAOS,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIF,QAASK,EAAOL,UAGxB,QACI,OAAOE,uCCnDbS,yLACwD,IAAAC,EAAAC,KAA7CC,EAA6CX,UAAAC,OAAA,QAAAR,IAAAO,UAAA,GAAAA,UAAA,GAAtCU,KAAKE,MAAMjB,SAAUkB,EAAiBb,UAAAC,OAAA,EAAAD,UAAA,QAAAP,EACtDqB,MAAK,0CAAAC,OAA2CF,EAA3C,OAAAE,OAAgEJ,EAAhE,wBAAAI,OAA2FL,KAAKE,MAAMhB,QACtGoB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GACF,OAAQN,GACJ,IAAK,UAED,YADAJ,EAAKG,MAAMQ,aAAaD,GAG5B,IAAK,WAED,YADAV,EAAKG,MAAMS,cAAcF,GAG7B,QAEI,YADAV,EAAKG,MAAMQ,aAAaD,kDAME,IAAAG,EAAAZ,KAA5BC,EAA4BX,UAAAC,OAAA,QAAAR,IAAAO,UAAA,GAAAA,UAAA,GAArBU,KAAKE,MAAMjB,SAChCmB,MAAK,2DAAAC,OAA4DJ,EAA5D,wBAAAI,OAAuFL,KAAKE,MAAMhB,MAAlG,WACAoB,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAG,GAAI,OAAIG,EAAKV,MAAMW,mBAAmBJ,iDAIhDT,KAAKc,kBAAkBd,KAAKE,MAAMjB,UACN,KAAxBe,KAAKE,MAAMjB,WACXe,KAAKU,aAAaV,KAAKE,MAAMjB,SAAU,WACvCe,KAAKU,aAAaV,KAAKE,MAAMjB,SAAU,wDAI5B8B,GACXA,EAAU9B,WAAae,KAAKE,MAAMjB,WAClCe,KAAKc,kBAAkBd,KAAKE,MAAMjB,UAClCe,KAAKU,aAAaV,KAAKE,MAAMjB,SAAU,WACvCe,KAAKU,aAAaV,KAAKE,MAAMjB,SAAU,8CAK3C,OAAO,YA5CY+B,aAqEZC,cArBS,SAAC5B,GACrB,MAAO,CACHJ,SAAUI,EAAMJ,SAChBC,MAAOG,EAAMH,QAIM,SAACgC,GACxB,MAAO,CACHR,aAAc,SAAC9B,GACXsC,EAAS,CAACzB,KAAM,gBAAiBb,QAASA,KAE9C+B,cAAe,SAAC9B,GACZqC,EAAS,CAACzB,KAAM,iBAAkBZ,SAAUA,KAEhDgC,mBAAoB,SAAC/B,GACjBoC,EAAS,CAACzB,KAAM,uBAAwBX,cAAeA,OAKpDmC,CAA6CnB,GC7D7CqB,EATA,kBACXC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YCHrBC,uLACWC,GACTA,EAAEC,iBACE1B,KAAKE,MAAMlB,cAAgBgB,KAAKE,MAAMjB,WACtCe,KAAKE,MAAMyB,cAAa,GACxB3B,KAAKE,MAAM0B,cAAc5B,KAAKE,MAAMlB,6DAIrByC,GACnBzB,KAAKE,MAAM2B,kBAAkBJ,EAAEK,OAAOC,wCAGjC,IAAAhC,EAAAC,KACL,OACIoB,EAAAC,EAAAC,cAAA,QAAMU,GAAG,cAAcC,SAAU,SAACR,GAAD,OAAO1B,EAAKmC,aAAaT,KACtDL,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBS,GAAG,gBAAeZ,EAAAC,EAAAC,cAAA,KAClDC,UAAU,2BACdH,EAAAC,EAAAC,cAAA,SAAO7B,KAAK,SAAS8B,UAAU,eAAeY,YAAY,cACnDC,mBAAiB,eACjBC,QAAS,SAACZ,GAAD,OAAO1B,EAAKuC,uBAAuBb,IAAIc,aAAcvC,KAAKE,MAAMlB,gBAGxFoC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,mBAAlB,qCA1BIP,aAsDTC,cArBS,SAAC5B,GACrB,MAAO,CACHL,YAAaK,EAAML,YACnBC,SAAUI,EAAMJ,WAIG,SAACiC,GACxB,MAAO,CACHW,kBAAmB,SAACW,GAChBtB,EAAS,CAACzB,KAAM,sBAAuBT,YAAawD,KAExDZ,cAAe,SAAC3C,GACZiC,EAAS,CAACzB,KAAM,iBAAkBR,SAAUA,KAEhD0C,aAAc,SAACxC,GACX+B,EAAS,CAACzB,KAAM,gBAAiBN,QAASA,OAKvC8B,CAA6CO,GC7C7CiB,EAVM,SAAAC,GAAgB,IAAdzD,EAAcyD,EAAdzD,SACb0D,EAAiC1D,EAAS2D,OAAO,GAAGC,cAAgB5D,EAAS6D,MAAM,GACzF,OACI1B,EAAAC,EAAAC,cAAA,OAAKU,GAAG,aACJZ,EAAAC,EAAAC,cAAA,wCAA+BF,EAAAC,EAAAC,cAAA,SAAIqB,GAAnC,MACAvB,EAAAC,EAAAC,cAAA,sHC+BGyB,EApCQ,SAAAL,GAAiC,IAA/BM,EAA+BN,EAA/BM,KAAMC,EAAyBP,EAAzBO,KAAMrE,EAAmB8D,EAAnB9D,QAASsE,EAAUR,EAAVQ,KACpCC,EAAO,mCAAA9C,OAAsCzB,EAAQwE,KAA9C,QAEb,OACIhC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,WAAsC3C,EAAQyE,aAC9CjC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAayB,GAC5B5B,EAAAC,EAAAC,cAAA,OAAKgC,IAAKH,EAASI,IAAI,eAClBhC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAe0B,EAAKO,KAAMC,UAAzC,SACArC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qBAAa4B,EAAKQ,MAAlB,QACAtC,EAAAC,EAAAC,cAAA,gCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,oCAAkB2B,EAAKU,SAAvB,KACAvC,EAAAC,EAAAC,cAAA,8BAAiB2B,EAAKW,SAAtB,SAEJxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBCX5BsC,EAfQ,SAAAnB,GAAe,IAC9BK,EADiBnE,EAAa8D,EAAb9D,QAQrB,OALIA,GAAWA,EAAQkF,eAAe,UAClCf,EACI3B,EAAAC,EAAAC,cAACyC,EAAD,CAAgBf,KAAMpE,EAAQoE,KAAMC,KAAMrE,EAAQqE,KAAMrE,QAASA,EAAQA,QAAQ,GAAIsE,KAAMtE,EAAQsE,QAIvG9B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACVwB,ICAEiB,EARe,SAAAtB,GAAyB,IAAvB9D,EAAuB8D,EAAvB9D,QAASK,EAAcyD,EAAdzD,SACrC,OAAIL,EAAQW,OAAS,GAAKX,EAAQ,GAAGkF,eAAe,WACzC1C,EAAAC,EAAAC,cAAC2C,EAAD,CAAgBrF,QAASA,EAAQ,KAGrCwC,EAAAC,EAAAC,cAAC4C,EAAD,CAAcjF,SAAUA,KCcpBkF,EAtBC,SAAAzB,GAAW,IACnB0B,EADUC,EAAS3B,EAAT2B,IAEd,OAAQA,GACJ,KAAK,EACDD,EAAc,YACd,MACJ,KAAK,EACDA,EAAc,QACd,MACJ,KAAK,EACDA,EAAc,WACd,MAEJ,QACIA,EAAW,MAAA/D,OAASgE,EAAT,QAGnB,OACIjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAe6C,ICZvBE,EANK,SAAA5B,GAAe,IAAb9D,EAAa8D,EAAb9D,QACXwE,EAAqBxE,EAArBwE,KAAMC,EAAezE,EAAfyE,YAEb,OAAOjC,EAAAC,EAAAC,cAAA,OAAKgC,IAAG,mCAAAjD,OAAqC+C,EAArC,QAAiDG,IAAKF,EAAa9B,UAAU,gBCQjFgD,EAXC,SAAA7B,GAAoB,IAAlB8B,EAAkB9B,EAAlB8B,aAIRH,EADY,CAAC,YAAa,oBAAgB,SAAU,aAAS,WAAY,cAAU,UAF5E,IAAII,KAAoB,IAAfD,GAGKE,UAE3B,OACItD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAa8C,ICArBM,EAPQ,SAAAjC,GAAmB,IAChCkC,EADgClC,EAAjBmC,YACYR,IAAIZ,UACrC,OACIrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAcqD,EAA7B,UCmCOE,mLAjCF,IAAAC,EACkB/E,KAAKE,MAArB8E,EADFD,EACEC,QAASX,EADXU,EACWV,IAEhB,OACIjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAC2D,EAAD,CAAST,aAAcQ,EAAQE,GAAIb,IAAKA,IACxCjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACXH,EAAAC,EAAAC,cAAC6D,EAAD,CAASX,aAAcQ,EAAQE,KAC/B9D,EAAAC,EAAAC,cAAC8D,EAAD,CAAaxG,QAASoG,EAAQpG,QAAQ,KACtCwC,EAAAC,EAAAC,cAAC+D,EAAD,CAAgBR,YAAaG,EAAQxB,OACrCpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAGvBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,qBAAa0D,EAAQtB,MAArB,QACAtC,EAAAC,EAAAC,cAAA,4BAAoB0D,EAAQM,OAA5B,MAEJlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,UAAQU,GAAG,OAAOuD,MAAM,KAAKC,OAAO,OACnCnB,GAAO,EAAIjD,EAAAC,EAAAC,cAAA,QACRC,UAAU,qCADF,yBACmDyD,EAAQrB,SAD3D,KAC+E,MAE/FvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBA1BlBkE,IAAMzE,WCgBZ0E,EAlBO,SAAAhD,GAAqB,IAAnB5D,EAAmB4D,EAAnB5D,cAChB6G,OAAqB5G,EASzB,OAPI4G,OADkB5G,IAAlBD,GAA+BA,EAAcgF,eAAe,QACvChF,EAAc8G,KAAKC,IAAI,SAACC,EAAMC,GAC/C,OAAO3E,EAAAC,EAAAC,cAAC0E,EAAD,CAAQhB,QAASc,EAAMzB,IAAK0B,EAAOE,IAAKF,MAG9B,KAIrB3E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACVoE,EACDvE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eCPrB2E,mLAEE,OACI9E,EAAAC,EAAAC,cAAA,OAAKU,GAAG,OACJZ,EAAAC,EAAAC,cAACZ,EAAD,MACAU,EAAAC,EAAAC,cAAC6E,EAAD,MAECnG,KAAKE,MAAMf,QAAUiC,EAAAC,EAAAC,cAAC8E,EAAD,MAEdhF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC+E,EAAD,CAAuBzH,QAASoB,KAAKE,MAAMtB,QAASK,SAAUe,KAAKE,MAAMjB,WACzEmC,EAAAC,EAAAC,cAACgF,EAAD,CAAexH,cAAekB,KAAKE,MAAMpB,yBAXnDkC,aA6BHC,cATS,SAAC5B,GACrB,MAAO,CACHF,QAASE,EAAMF,QACfP,QAASS,EAAMT,QACfE,cAAeO,EAAMP,cACrBG,SAAUI,EAAMJ,WAITgC,CAAyBiF,GC7BlCK,SAAcC,QACW,cAA7BC,OAAOxH,SAASyH,UAEe,UAA7BD,OAAOxH,SAASyH,UAEhBD,OAAOxH,SAASyH,SAASC,MACvB,4DAsCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTvG,KAAK,SAAA2G,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9H,QACfyH,UAAUC,cAAcO,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBC,MAAM,SAAAC,GACLH,QAAQG,MAAM,4CAA6CA,KCrEjE,IAAMC,EAAQC,YAAYxI,GAE1ByI,IAASC,OACL1G,EAAAC,EAAAC,cAACyG,EAAA,EAAD,CAAUJ,MAAOA,GACbvG,EAAAC,EAAAC,cAAC0G,EAAD,OACSC,SAASC,eAAe,gBDK1B,WACb,GAA6C,kBAAmBpB,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,IAAwB3B,OAAOxH,UAC3CoJ,SAAW5B,OAAOxH,SAASoJ,OAIvC,OAGF5B,OAAO6B,iBAAiB,OAAQ,WAC9B,IAAMzB,EAAK,GAAAxG,OAAM+H,IAAN,sBAEP7B,GAiDV,SAAiCM,GAE/BzG,MAAMyG,GACHvG,KAAK,SAAAC,GAGkB,MAApBA,EAASgI,SACuD,IAAhEhI,EAASiI,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C5B,UAAUC,cAAc4B,MAAMrI,KAAK,SAAA2G,GACjCA,EAAa2B,aAAatI,KAAK,WAC7BmG,OAAOxH,SAAS4J,aAKpBjC,EAAgBC,KAGnBY,MAAM,WACLF,QAAQC,IACN,mEArEAsB,CAAwBjC,GAIxBC,UAAUC,cAAc4B,MAAMrI,KAAK,WACjCiH,QAAQC,IACN,+GAMJZ,EAAgBC,MChCxBkC","file":"static/js/main.1b7d3c43.chunk.js","sourcesContent":["const initState = {\r\n    weather: [],\r\n    forecast: {},\r\n    dailyForecast: undefined,\r\n    searchInput: '',\r\n    location: 'Ochmanów',\r\n    appid: '74ab00f9f5d6f488185edff7e764b725',\r\n    loading: true\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_WEATHER':\r\n            return {\r\n                ...state,\r\n                weather: [action.weather],\r\n                cityFound: action.weather.cod !== 404,\r\n                loading: false\r\n            };\r\n\r\n        case 'FETCH_FORECAST':\r\n            return {\r\n                ...state,\r\n                forecast: [action.forecast],\r\n                loading: false\r\n            };\r\n\r\n        case 'FETCH_DAILY_FORECAST':\r\n            return {\r\n                ...state,\r\n                dailyForecast: action.dailyForecast\r\n            };\r\n\r\n        // todo check if this have to be like that. this makes to\r\n        // 're-render' components every time someone type something\r\n        // try to put this to state instead of reducer (update only on submit)\r\n        case 'UPDATE_SEARCH_INPUT':\r\n            return {\r\n                ...state,\r\n                searchInput: action.searchInput\r\n            };\r\n\r\n        case 'UPDATE_WEATHER':\r\n            return {\r\n                ...state,\r\n                location: action.location\r\n            };\r\n        case 'UPDATE_LOADER':\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n","import {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass FetchWeather extends Component {\r\n    fetchWeather(city = this.props.location, weatherForecast) {\r\n        fetch(`http://api.openweathermap.org/data/2.5/${weatherForecast}?q=${city}&units=metric&appid=${this.props.appid}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                switch (weatherForecast) {\r\n                    case 'weather':\r\n                        this.props.fetchWeather(data);\r\n                        return;\r\n\r\n                    case 'forecast':\r\n                        this.props.fetchForecast(data);\r\n                        return;\r\n\r\n                    default:\r\n                        this.props.fetchWeather(data);\r\n                        return;\r\n                }\r\n            })\r\n    }\r\n\r\n    fetchWeatherDaily(city = this.props.location) {\r\n        fetch(`http://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&units=metric&appid=${this.props.appid}&cnt=6`)\r\n            .then(response => response.json())\r\n            .then(data => this.props.fetchDailyForecast(data))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchWeatherDaily(this.props.location);\r\n        if (this.props.location !== '') {\r\n            this.fetchWeather(this.props.location, 'weather');\r\n            this.fetchWeather(this.props.location, 'forecast');\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location !== this.props.location) {\r\n            this.fetchWeatherDaily(this.props.location);\r\n            this.fetchWeather(this.props.location, 'weather');\r\n            this.fetchWeather(this.props.location, 'forecast');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        location: state.location,\r\n        appid: state.appid\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchWeather: (weather) => {\r\n            dispatch({type: 'FETCH_WEATHER', weather: weather})\r\n        },\r\n        fetchForecast: (forecast) => {\r\n            dispatch({type: 'FETCH_FORECAST', forecast: forecast})\r\n        },\r\n        fetchDailyForecast: (dailyForecast) => {\r\n            dispatch({type: 'FETCH_DAILY_FORECAST', dailyForecast: dailyForecast})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FetchWeather);\r\n","import React from 'react';\r\n\r\nconst loader = () => (\r\n    <div className=\"loader-wrapper\">\r\n        <div className=\"spinner\">\r\n            <div className=\"dot1\"/>\r\n            <div className=\"dot2\"/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default loader;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nclass SearchBar extends Component {\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.props.searchInput !== this.props.location) {\r\n            this.props.updateLoader(true);\r\n            this.props.updateWeather(this.props.searchInput);\r\n        }\r\n    }\r\n\r\n    updateSearchInputValue(e) {\r\n        this.props.updateSearchInput(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form id=\"search-form\" onSubmit={(e) => this.handleSubmit(e)}>\r\n                <label>\r\n                    <div className=\"input-group\">\r\n                        <span className=\"input-group-addon\" id=\"basic-addon1\"><i\r\n                            className=\"fas fa-map-marker-alt\"/></span>\r\n                        <input type=\"search\" className=\"form-control\" placeholder=\"Ochmanów\"\r\n                               aria-describedby=\"basic-addon1\"\r\n                               onInput={(e) => this.updateSearchInputValue(e)} defaultValue={this.props.searchInput}/>\r\n                    </div>\r\n                </label>\r\n                <div className=\"control\">\r\n                    <button className=\"btn btn-primary\">Sprawdź pogodę</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchInput: state.searchInput,\r\n        location: state.location\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSearchInput: (inputText) => {\r\n            dispatch({type: 'UPDATE_SEARCH_INPUT', searchInput: inputText})\r\n        },\r\n        updateWeather: (location) => {\r\n            dispatch({type: 'UPDATE_WEATHER', location: location})\r\n        },\r\n        updateLoader: (loading) => {\r\n            dispatch({type: 'UPDATE_LOADER', loading: loading})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\r\n","import React from 'react';\r\n\r\nconst cityNotFound = ({location}) => {\r\n    const locationFirstLetterToUpperCase = location.charAt(0).toUpperCase() + location.slice(1);\r\n    return (\r\n        <div id=\"not-found\">\r\n            <h2>Nie znaleziono pogody dla \"<b>{locationFirstLetterToUpperCase}</b>\".</h2>\r\n            <p>Spróbuj wpisać inną lokalizację, lub sprawdź czy nie masz literówki w nazwie.</p>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default cityNotFound;\r\n","import React from 'react';\r\n\r\nconst weatherDetails = ({name, main, weather, wind}) => {\r\n    const iconUrl = `http://openweathermap.org/img/w/${weather.icon}.png`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 tile-wrapper\">\r\n                    <div className=\"tiles red weather-widget\">\r\n                        <div className=\"tiles-body\">\r\n                            <div className=\"tiles-title\">Teraz - {weather.description}</div>\r\n                            <div className=\"heading\">\r\n                                <div className=\"pull-left\">{name}</div>\r\n                                <img src={iconUrl} alt=\"sky is clear\"\r\n                                     className=\"pull-right\"/>\r\n                                <div className=\"pull-right\">{(main.temp).toFixed()}°C</div>\r\n                                <div className=\"clearfix\"></div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"tile-footer\">\r\n                            <div className=\"pull-left\">\r\n                                <div>Wiatr: {wind.speed} m/s</div>\r\n                                <div>Zachmurzenie: 0%</div>\r\n                            </div>\r\n                            <div className=\"pull-right\">\r\n                                <div>Wilgotność: {main.humidity}%</div>\r\n                                <div>Ciśnienie: {main.pressure} hPa</div>\r\n                            </div>\r\n                            <div className=\"clearfix\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default weatherDetails;\r\n","import React from 'react';\r\nimport WeatherDetails from './weatherDetails';\r\n\r\nconst currentWeather = ({weather}) => {\r\n    let weatherDetails;\r\n\r\n    if (weather && weather.hasOwnProperty('main')) {\r\n        weatherDetails =\r\n            <WeatherDetails name={weather.name} main={weather.main} weather={weather.weather[0]} wind={weather.wind}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"current-weather\">\r\n            {weatherDetails}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default currentWeather;\r\n","import React from 'react';\r\n\r\nimport CityNotFound from '../cityNotFound';\r\nimport CurrentWeather from './CurrentWeather';\r\n\r\nconst currentWeatherWrapper = ({weather, location}) => {\r\n    if (weather.length > 0 && weather[0].hasOwnProperty('weather')) {\r\n        return <CurrentWeather weather={weather[0]}/>\r\n    }\r\n\r\n    return <CityNotFound location={location}/>\r\n};\r\n\r\nexport default currentWeatherWrapper;\r\n","import React from 'react';\r\n\r\nconst NextDay = ({day}) => {\r\n    let nextDayText;\r\n    switch (day) {\r\n        case 0:\r\n            nextDayText = 'Dziś';\r\n            break;\r\n        case 1:\r\n            nextDayText = 'Jutro';\r\n            break;\r\n        case 2:\r\n            nextDayText = 'Pojutrze';\r\n            break;\r\n\r\n        default:\r\n            nextDayText = `Za ${day} dni`\r\n    }\r\n\r\n    return (\r\n        <div className=\"tiles-title\">{nextDayText}</div>\r\n    )\r\n};\r\n\r\nexport default NextDay;\r\n","import React from 'react';\r\n\r\nconst WeatherIcon = ({weather}) => {\r\n    const {icon, description} = weather;\r\n\r\n    return <img src={`http://openweathermap.org/img/w/${icon}.png`} alt={description} className=\"pull-right\"/>\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React from 'react';\r\n\r\nconst WeekDay = ({dayTimestamp}) => {\r\n    const date = new Date(dayTimestamp * 1000);\r\n\r\n    const daysArray = ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'];\r\n    const day = daysArray[date.getDay()];\r\n\r\n    return (\r\n        <div className=\"pull-left\">{day}</div>\r\n    )\r\n};\r\n\r\nexport default WeekDay;\r\n","import React from 'react';\r\n\r\nconst DayTemperature = ({temperature}) => {\r\n    const fixedTempDay = temperature.day.toFixed();\r\n    return (\r\n        <div className=\"pull-right\">{fixedTempDay}°C</div>\r\n    )\r\n};\r\n\r\nexport default DayTemperature;\r\n","import React from 'react';\r\nimport NextDay from './NextDay';\r\nimport WeatherIcon from './WeatherIcon';\r\nimport WeekDay from './WeekDay';\r\nimport DayTemperature from './DayTemperature';\r\n\r\nclass OneDay extends React.Component {\r\n    render() {\r\n        const {dayData, day} = this.props;\r\n\r\n        return (\r\n            <div className=\"col-md-4 col-sm-4 tile-wrapper\">\r\n                <div className=\"tiles red weather-widget\">\r\n                    <div className=\"tiles-body\">\r\n                        <NextDay dayTimestamp={dayData.dt} day={day}/>\r\n                        <div className=\"heading\">\r\n                            <WeekDay dayTimestamp={dayData.dt}/>\r\n                            <WeatherIcon weather={dayData.weather[0]}/>\r\n                            <DayTemperature temperature={dayData.temp}/>\r\n                            <div className=\"clearfix\"/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tile-footer\">\r\n                        <div className=\"pull-left\">\r\n                            <div>Wiatr: {dayData.speed} m/s</div>\r\n                            <div>Zachmurzenie: {dayData.clouds}%</div>\r\n                        </div>\r\n                        <div className=\"pull-right\">\r\n                            <canvas id=\"rain\" width=\"32\" height=\"32\"></canvas>\r\n                            {day <= 3 ? <span\r\n                                className=\"text-white small-text-description\">Wilgotność: {dayData.humidity}%</span> : null}\r\n                        </div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OneDay;\r\n","import React from 'react';\r\n\r\nimport OneDay from './OneDay';\r\n\r\nconst DailyForecast = ({dailyForecast}) => {\r\n    let dailyForecastTiles = undefined;\r\n    if (dailyForecast !== undefined && dailyForecast.hasOwnProperty('list')) {\r\n        dailyForecastTiles = dailyForecast.list.map((item, index) => {\r\n            return <OneDay dayData={item} day={index} key={index}/>\r\n        })\r\n    } else {\r\n        dailyForecastTiles = null\r\n    }\r\n\r\n    return (\r\n        <div className=\"forecast-wrapper\">\r\n            {dailyForecastTiles}\r\n            <div className=\"clearfix\"/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DailyForecast;\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FetchWeather from './containers/fetchWeather';\r\n\r\nimport Loader from './components/loader/loader';\r\nimport SearchBar from './components/searchBar';\r\nimport CurrentWeatherWrapper from './components/currentWeather/CurrentWeatherWrapper';\r\nimport DailyForecast from './components/dailyForecast/DailyForecast';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div id=\"app\">\r\n                <FetchWeather/>\r\n                <SearchBar/>\r\n\r\n                {this.props.loading ? <Loader/> :\r\n                    (\r\n                        <div>\r\n                            <CurrentWeatherWrapper weather={this.props.weather} location={this.props.location}/>\r\n                            <DailyForecast dailyForecast={this.props.dailyForecast}/>\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        weather: state.weather,\r\n        dailyForecast: state.dailyForecast,\r\n        location: state.location\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport './styles/main.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('weather-app'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}