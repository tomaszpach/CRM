{"version":3,"sources":["reducers/rootReducer.js","containers/fetchWeather.js","components/searchBar.js","components/loader/loader.js","components/dailyForecast/NextDay.js","components/dailyForecast/WeatherIcon.js","components/dailyForecast/WeekDay.js","components/dailyForecast/DayTemperature.js","components/dailyForecast/OneDay.js","components/dailyForecast/DailyForecast.js","components/currentWeather/weatherDetails.js","components/currentWeather/CurrentWeather.js","components/currentWeather/CurrentWeatherWrapper.js","App.js","registerServiceWorker.js","index.js"],"names":["initState","weather","forecast","dailyForecast","undefined","searchInput","location","appid","loading","rootReducer","state","arguments","length","action","type","Object","objectSpread","cityFound","cod","FetchWeather","_this","this","city","props","weatherForecast","fetch","concat","then","response","json","data","fetchWeather","fetchForecast","finally","setState","_this2","fetchDailyForecast","fetchWeatherDaily","prevProps","Component","connect","dispatch","SearchBar","_ref","onSubmit","onInput","value","react_default","a","createElement","id","e","className","placeholder","aria-describedby","defaultValue","loader","NextDay","nextDayText","day","WeatherIcon","icon","description","src","alt","WeekDay","dayTimestamp","Date","getDay","DayTemperature","fixedTempDay","temperature","toFixed","OneDay","_this$props","dayData","dailyForecast_NextDay","dt","dailyForecast_WeekDay","dailyForecast_WeatherIcon","dailyForecast_DayTemperature","temp","speed","clouds","width","height","humidity","React","DailyForecast","days","hasOwnProperty","list","map","item","index","dailyForecast_OneDay","key","components_loader_loader","weatherDetails","name","main","wind","iconUrl","pressure","currentWeather","currentWeather_weatherDetails","currentWeatherWrapper","CurrentWeather","App","preventDefault","updateLoader","updateWeather","updateSearchInput","target","searchBar","updateSearchInputValue","handleSubmit","CurrentWeatherWrapper","dailyForecast_DailyForecast","inputText","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c1d6736b.chunk.js","sourcesContent":["const initState = {\r\n    weather: [],\r\n    forecast: {},\r\n    dailyForecast: undefined,\r\n    searchInput: '',\r\n    location: 'Krakow',\r\n    appid: '74ab00f9f5d6f488185edff7e764b725',\r\n    loading: true\r\n};\r\n\r\nconst rootReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case 'FETCH_WEATHER':\r\n            return {\r\n                ...state,\r\n                weather: [action.weather],\r\n                cityFound: action.weather.cod !== 404,\r\n                loading: false\r\n            };\r\n\r\n        case 'FETCH_FORECAST':\r\n            return {\r\n                ...state,\r\n                forecast: [action.forecast],\r\n                loading: false\r\n            };\r\n\r\n        case 'FETCH_DAILY_FORECAST':\r\n            return {\r\n                ...state,\r\n                dailyForecast: action.dailyForecast\r\n            };\r\n\r\n            // todo check if this have to be like that. this makes to\r\n            // 're-render' components every time someone type something\r\n            // try to put this to state instead of reducer (update only on submit)\r\n        case 'UPDATE_SEARCH_INPUT':\r\n            return {\r\n                ...state,\r\n                searchInput: action.searchInput\r\n            };\r\n\r\n        case 'UPDATE_WEATHER':\r\n            return {\r\n                ...state,\r\n                location: action.location\r\n            };\r\n        case 'UPDATE_LOADER':\r\n            return {\r\n                ...state,\r\n                loading: action.loading\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default rootReducer;\r\n","import {Component} from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass FetchWeather extends Component {\r\n\r\n    fetchWeather(city = this.props.location, weatherForecast) {\r\n        fetch(`http://api.openweathermap.org/data/2.5/${weatherForecast}?q=${city}&units=metric&appid=${this.props.appid}`)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                switch (weatherForecast) {\r\n                    case 'weather':\r\n                        this.props.fetchWeather(data);\r\n                        return;\r\n\r\n                    case 'forecast':\r\n                        this.props.fetchForecast(data);\r\n                        return;\r\n\r\n                    default:\r\n                        this.props.fetchWeather(data);\r\n                        return;\r\n                }\r\n            })\r\n            .finally(() => this.setState({loading: false}));\r\n    }\r\n\r\n    fetchWeatherDaily(city = this.props.location) {\r\n        fetch(`http://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&units=metric&appid=${this.props.appid}&cnt=6`)\r\n            .then(response => response.json())\r\n            .then(data => this.props.fetchDailyForecast(data))\r\n            .finally(() => this.setState({loading: false}));\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchWeatherDaily();\r\n        if (this.props.location !== '') {\r\n            this.fetchWeather(this.props.location, 'weather');\r\n            this.fetchWeather(this.props.location, 'forecast');\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.location !== this.props.location) {\r\n            this.fetchWeather(this.props.location, 'weather');\r\n            this.fetchWeather(this.props.location, 'forecast');\r\n            this.fetchWeatherDaily();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return null\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        location: state.location,\r\n        appid: state.appid\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        fetchWeather: (weather) => {\r\n            dispatch({type: 'FETCH_WEATHER', weather: weather})\r\n        },\r\n        fetchForecast: (forecast) => {\r\n            dispatch({type: 'FETCH_FORECAST', forecast: forecast})\r\n        },\r\n        fetchDailyForecast: (dailyForecast) => {\r\n            dispatch({type: 'FETCH_DAILY_FORECAST', dailyForecast: dailyForecast})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FetchWeather);\r\n","import React from 'react';\r\n\r\nconst SearchBar = ({onSubmit, onInput, value}) => (\r\n        <form id=\"search-form\" onSubmit={(e) => onSubmit(e)}>\r\n            <label>\r\n                <div className=\"input-group\">\r\n                    <span className=\"input-group-addon\" id=\"basic-addon1\"><i className=\"fas fa-map-marker-alt\"/></span>\r\n                    <input type=\"search\" className=\"form-control\" placeholder=\"Kraków\" aria-describedby=\"basic-addon1\"\r\n                           onInput={(e) => onInput(e)} defaultValue={value}/>\r\n                </div>\r\n            </label>\r\n            <div className=\"control\">\r\n                <button className=\"btn btn-primary\">Sprawdź pogodę</button>\r\n            </div>\r\n        </form>\r\n    )\r\n;\r\n\r\nexport default SearchBar;\r\n","import React from 'react';\r\n\r\nconst loader = () => (\r\n    <div className=\"loader-wrapper\">\r\n        <div className=\"spinner\">\r\n            <div className=\"dot1\"/>\r\n            <div className=\"dot2\"/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default loader;","import React from 'react';\r\n\r\nconst NextDay = ({day}) => {\r\n    let nextDayText;\r\n    if (day === 0) {\r\n        nextDayText = 'Dziś'\r\n    } else if (day === 1) {\r\n        nextDayText = 'Jutro'\r\n    } else if (day === 2) {\r\n        nextDayText = 'Pojutrze'\r\n    } else {\r\n        nextDayText = `Za ${day + 1} dni`\r\n    }\r\n\r\n    return (\r\n        <div className=\"tiles-title\">{nextDayText}</div>\r\n    )\r\n};\r\n\r\nexport default NextDay;\r\n","import React from 'react';\r\n\r\nconst WeatherIcon = ({weather}) => {\r\n    const {icon, description} = weather;\r\n\r\n    return <img src={`http://openweathermap.org/img/w/${icon}.png`} alt={description} className=\"pull-right\"/>\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React from 'react';\r\n\r\nconst WeekDay = ({dayTimestamp}) => {\r\n    const date = new Date(dayTimestamp * 1000);\r\n\r\n    const daysArray = ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'];\r\n    const day = daysArray[date.getDay()];\r\n\r\n    return (\r\n        <div className=\"pull-left\">{day}</div>\r\n    )\r\n};\r\n\r\nexport default WeekDay;\r\n","import React from 'react';\r\n\r\nconst DayTemperature = ({temperature}) => {\r\n    const fixedTempDay = temperature.day.toFixed();\r\n    return (\r\n        <div className=\"pull-right\">{fixedTempDay}°C</div>\r\n    )\r\n};\r\n\r\nexport default DayTemperature;\r\n","import React from 'react';\r\nimport NextDay from './NextDay';\r\nimport WeatherIcon from './WeatherIcon';\r\nimport WeekDay from './WeekDay';\r\nimport DayTemperature from './DayTemperature';\r\n\r\nclass OneDay extends React.Component {\r\n    render() {\r\n        const {dayData, day} = this.props;\r\n\r\n        return (\r\n            <div className=\"col-md-4 col-sm-4 tile-wrapper\">\r\n                <div className=\"tiles red weather-widget\">\r\n                    <div className=\"tiles-body\">\r\n                        <NextDay dayTimestamp={dayData.dt} day={day}/>\r\n                        <div className=\"heading\">\r\n                            <WeekDay dayTimestamp={dayData.dt} />\r\n                            <WeatherIcon weather={dayData.weather[0]} />\r\n                            <DayTemperature temperature={dayData.temp}/>\r\n                            <div className=\"clearfix\" />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tile-footer\">\r\n                        <div className=\"pull-left\">\r\n                            <div>Wiatr: {dayData.speed} m/s</div>\r\n                            <div>Zachmurzenie: {dayData.clouds}%</div>\r\n                        </div>\r\n                        <div className=\"pull-right\">\r\n                            <canvas id=\"rain\" width=\"32\" height=\"32\"></canvas>\r\n                            {/* todo nie wyswietlaj nic jezeli wilgotnosc 0% (dni 5+) */}\r\n                            <span className=\"text-white small-text-description\">Wilgotność: {dayData.humidity}%</span></div>\r\n                        <div className=\"clearfix\"></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default OneDay;\r\n","import React from 'react';\r\n\r\nimport Loader from '../loader/loader';\r\nimport OneDay from './OneDay';\r\n\r\nconst DailyForecast = ({dailyForecast}) => {\r\n    let days = undefined;\r\n    if (dailyForecast !== undefined && dailyForecast.hasOwnProperty('list')) {\r\n        days = dailyForecast.list.map((item, index) => {\r\n            return <OneDay dayData={item} day={index} key={index}/>\r\n        })\r\n    } else {\r\n        days = <Loader/>\r\n    }\r\n\r\n    return (\r\n        <div className=\"forecast-wrapper\">\r\n            {days}\r\n            <div className=\"clearfix\" />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default DailyForecast;\r\n","import React from 'react';\r\n\r\nconst weatherDetails = ({name, main, weather, wind}) => {\r\n    const iconUrl = `http://openweathermap.org/img/w/${weather.icon}.png`;\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-12 tile-wrapper\">\r\n                    <div className=\"tiles red weather-widget\">\r\n                        <div className=\"tiles-body\">\r\n                            <div className=\"tiles-title\">Teraz - {weather.description}</div>\r\n                            <div className=\"heading\">\r\n                                <div className=\"pull-left\">{name}</div>\r\n                                <img src={iconUrl} alt=\"sky is clear\"\r\n                                     className=\"pull-right\" />\r\n                                <div className=\"pull-right\">{(main.temp).toFixed()}°C</div>\r\n                                <div className=\"clearfix\"></div></div>\r\n                        </div>\r\n                        <div className=\"tile-footer\">\r\n                            <div className=\"pull-left\">\r\n                                <div>Wiatr: {wind.speed} m/s</div>\r\n                                <div>Zachmurzenie: 0%</div>\r\n                            </div>\r\n                            <div className=\"pull-right\">\r\n                                <div>Wilgotność: {main.humidity}%</div>\r\n                                <div>Ciśnienie: {main.pressure} hPa</div>\r\n                            </div>\r\n                            <div className=\"clearfix\"></div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n)\r\n};\r\n\r\nexport default weatherDetails;\r\n","import React from 'react';\r\nimport WeatherDetails from './weatherDetails';\r\n\r\nconst currentWeather = ({weather}) => {\r\n    let weatherDetails;\r\n\r\n    if (weather && weather.hasOwnProperty('main')) {\r\n        weatherDetails = <WeatherDetails name={weather.name} main={weather.main} weather={weather.weather[0]} wind={weather.wind}/>;\r\n    }\r\n\r\n    return (\r\n        <div className=\"current-weather\">\r\n            {weatherDetails}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default currentWeather;","import React from 'react';\r\n\r\nimport Loader from '../loader/loader';\r\nimport CurrentWeather from './CurrentWeather';\r\n\r\nconst currentWeatherWrapper = ({weather}) => {\r\n    if (weather.length > 0 && weather[0].hasOwnProperty('weather')) {\r\n        return <CurrentWeather weather={weather[0]}/>\r\n    }\r\n\r\n    return <Loader/>\r\n\r\n};\r\n\r\nexport default currentWeatherWrapper;","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FetchWeather from './containers/fetchWeather';\r\n\r\nimport SearchBar from './components/searchBar';\r\n// import ForecastWeather from './components/forecastWeather/ForecastWeatherWrapper';\r\nimport DailyForecast from './components/dailyForecast/DailyForecast';\r\nimport CurrentWeatherWrapper from './components/currentWeather/CurrentWeatherWrapper';\r\n\r\nclass App extends Component {\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        if (this.props.searchInput !== this.props.location) {\r\n            this.props.updateLoader(true);\r\n            this.props.updateWeather(this.props.searchInput);\r\n        }\r\n    }\r\n\r\n    updateSearchInputValue(e) {\r\n        this.props.updateSearchInput(e.target.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"app\">\r\n                <FetchWeather/>\r\n                <SearchBar onInput={(e) => this.updateSearchInputValue(e)} onSubmit={(e) => this.handleSubmit(e)}\r\n                           value={this.props.searchInput}/>\r\n\r\n                <CurrentWeatherWrapper weather={this.props.weather}/>\r\n                <DailyForecast dailyForecast={this.props.dailyForecast}/>\r\n                {/*<ForecastWeather forecast={this.props.forecast}/>*/}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loading: state.loading,\r\n        weather: state.weather,\r\n        forecast: state.forecast,\r\n        searchInput: state.searchInput,\r\n        location: state.location,\r\n        dailyForecast: state.dailyForecast,\r\n        cityFound: state.cityFound\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        updateSearchInput: (inputText) => {\r\n            dispatch({type: 'UPDATE_SEARCH_INPUT', searchInput: inputText})\r\n        },\r\n        updateWeather: (location) => {\r\n            dispatch({type: 'UPDATE_WEATHER', location: location})\r\n        },\r\n        updateLoader: (loading) => {\r\n            dispatch({type: 'UPDATE_LOADER', loading: loading})\r\n        }\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport rootReducer from './reducers/rootReducer';\r\nimport App from './App';\r\nimport './styles/main.css';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nconst store = createStore(rootReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('weather-app'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}