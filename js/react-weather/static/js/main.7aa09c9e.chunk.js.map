{"version":3,"sources":["reducers/rootReducer.js","containers/fetchWeather.js","components/searchBar.js","components/loader/loader.js","components/dailyForecast/NextDay.js","components/dailyForecast/WeatherIcon.js","components/dailyForecast/WeekDay.js","components/dailyForecast/DayTemperature.js","components/dailyForecast/OneDay.js","components/dailyForecast/DailyForecast.js","components/currentWeather/weatherDetails.js","components/currentWeather/CurrentWeather.js","components/currentWeather/CurrentWeatherWrapper.js","App.js","registerServiceWorker.js","index.js"],"names":["initState","weather","forecast","dailyForecast","undefined","searchInput","location","appid","loading","rootReducer","state","arguments","length","action","type","Object","objectSpread","cityFound","cod","FetchWeather","_this","this","city","props","weatherForecast","fetch","concat","then","response","json","data","fetchWeather","fetchForecast","finally","setState","_this2","fetchDailyForecast","fetchWeatherDaily","prevProps","Component","connect","dispatch","SearchBar","e","preventDefault","updateLoader","updateWeather","updateSearchInput","target","value","react_default","a","createElement","id","onSubmit","handleSubmit","className","placeholder","aria-describedby","onInput","updateSearchInputValue","defaultValue","React","inputText","loader","NextDay","_ref","nextDayText","day","WeatherIcon","icon","description","src","alt","WeekDay","dayTimestamp","Date","getDay","DayTemperature","fixedTempDay","temperature","toFixed","OneDay","_this$props","dayData","dailyForecast_NextDay","dt","dailyForecast_WeekDay","dailyForecast_WeatherIcon","dailyForecast_DayTemperature","temp","speed","clouds","width","height","humidity","DailyForecast","days","hasOwnProperty","list","map","item","index","dailyForecast_OneDay","key","components_loader_loader","weatherDetails","name","main","wind","iconUrl","pressure","currentWeather","currentWeather_weatherDetails","currentWeatherWrapper","CurrentWeather","App","searchBar","CurrentWeatherWrapper","dailyForecast_DailyForecast","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","store","createStore","ReactDOM","render","es","src_App","document","getElementById","URL","process","origin","addEventListener","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.7aa09c9e.chunk.js","sourcesContent":["const initState = {\n    weather: [],\n    forecast: {},\n    dailyForecast: undefined,\n    searchInput: '',\n    location: 'Ochmanów',\n    appid: '74ab00f9f5d6f488185edff7e764b725',\n    loading: true\n};\n\nconst rootReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'FETCH_WEATHER':\n            return {\n                ...state,\n                weather: [action.weather],\n                cityFound: action.weather.cod !== 404,\n                loading: false\n            };\n\n        case 'FETCH_FORECAST':\n            return {\n                ...state,\n                forecast: [action.forecast],\n                loading: false\n            };\n\n        case 'FETCH_DAILY_FORECAST':\n            return {\n                ...state,\n                dailyForecast: action.dailyForecast\n            };\n\n            // todo check if this have to be like that. this makes to\n            // 're-render' components every time someone type something\n            // try to put this to state instead of reducer (update only on submit)\n        case 'UPDATE_SEARCH_INPUT':\n            return {\n                ...state,\n                searchInput: action.searchInput\n            };\n\n        case 'UPDATE_WEATHER':\n            return {\n                ...state,\n                location: action.location\n            };\n        case 'UPDATE_LOADER':\n            return {\n                ...state,\n                loading: action.loading\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport default rootReducer;\n","import {Component} from 'react'\nimport {connect} from 'react-redux';\n\nclass FetchWeather extends Component {\n\n    fetchWeather(city = this.props.location, weatherForecast) {\n        fetch(`http://api.openweathermap.org/data/2.5/${weatherForecast}?q=${city}&units=metric&appid=${this.props.appid}`)\n            .then(response => response.json())\n            .then(data => {\n                switch (weatherForecast) {\n                    case 'weather':\n                        this.props.fetchWeather(data);\n                        return;\n\n                    case 'forecast':\n                        this.props.fetchForecast(data);\n                        return;\n\n                    default:\n                        this.props.fetchWeather(data);\n                        return;\n                }\n            })\n            .finally(() => this.setState({loading: false}));\n    }\n\n    fetchWeatherDaily(city = this.props.location) {\n        fetch(`http://api.openweathermap.org/data/2.5/forecast/daily?q=${city}&units=metric&appid=${this.props.appid}&cnt=6`)\n            .then(response => response.json())\n            .then(data => this.props.fetchDailyForecast(data))\n            .finally(() => this.setState({loading: false}));\n    }\n\n    componentDidMount() {\n        this.fetchWeatherDaily();\n        if (this.props.location !== '') {\n            this.fetchWeather(this.props.location, 'weather');\n            this.fetchWeather(this.props.location, 'forecast');\n        }\n    }\n\n    componentDidUpdate(prevProps) {\n        if (prevProps.location !== this.props.location) {\n            this.fetchWeather(this.props.location, 'weather');\n            this.fetchWeather(this.props.location, 'forecast');\n            this.fetchWeatherDaily();\n        }\n    }\n\n    render() {\n        return null\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        location: state.location,\n        appid: state.appid\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        fetchWeather: (weather) => {\n            dispatch({type: 'FETCH_WEATHER', weather: weather})\n        },\n        fetchForecast: (forecast) => {\n            dispatch({type: 'FETCH_FORECAST', forecast: forecast})\n        },\n        fetchDailyForecast: (dailyForecast) => {\n            dispatch({type: 'FETCH_DAILY_FORECAST', dailyForecast: dailyForecast})\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FetchWeather);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nclass SearchBar extends React.Component {\n    handleSubmit(e) {\n        e.preventDefault();\n        if (this.props.searchInput !== this.props.location) {\n            this.props.updateLoader(true);\n            this.props.updateWeather(this.props.searchInput);\n        }\n    }\n\n    updateSearchInputValue(e) {\n        this.props.updateSearchInput(e.target.value);\n    }\n\n    render() {\n        return (\n            <form id=\"search-form\" onSubmit={(e) => this.handleSubmit(e)}>\n                <label>\n                    <div className=\"input-group\">\n                        <span className=\"input-group-addon\" id=\"basic-addon1\"><i className=\"fas fa-map-marker-alt\"/></span>\n                        <input type=\"search\" className=\"form-control\" placeholder=\"Ochmanów\" aria-describedby=\"basic-addon1\"\n                               onInput={(e) => this.updateSearchInputValue(e)} defaultValue={this.props.searchInput}/>\n                    </div>\n                </label>\n                <div className=\"control\">\n                    <button className=\"btn btn-primary\">Sprawdź pogodę</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        searchInput: state.searchInput,\n        location: state.location\n    }\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        updateSearchInput: (inputText) => {\n            dispatch({ type: 'UPDATE_SEARCH_INPUT', searchInput: inputText})\n        },\n        updateWeather: (location) => {\n            dispatch({type: 'UPDATE_WEATHER', location: location})\n        },\n        updateLoader: (loading) => {\n            dispatch({type: 'UPDATE_LOADER', loading: loading})\n        }\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchBar);\n","import React from 'react';\n\nconst loader = () => (\n    <div className=\"loader-wrapper\">\n        <div className=\"spinner\">\n            <div className=\"dot1\"/>\n            <div className=\"dot2\"/>\n        </div>\n    </div>\n);\n\nexport default loader;","import React from 'react';\n\nconst NextDay = ({day}) => {\n    let nextDayText;\n    if (day === 0) {\n        nextDayText = 'Dziś'\n    } else if (day === 1) {\n        nextDayText = 'Jutro'\n    } else if (day === 2) {\n        nextDayText = 'Pojutrze'\n    } else {\n        nextDayText = `Za ${day} dni`\n    }\n\n    return (\n        <div className=\"tiles-title\">{nextDayText}</div>\n    )\n};\n\nexport default NextDay;\n","import React from 'react';\n\nconst WeatherIcon = ({weather}) => {\n    const {icon, description} = weather;\n\n    return <img src={`http://openweathermap.org/img/w/${icon}.png`} alt={description} className=\"pull-right\"/>\n};\n\nexport default WeatherIcon;\n","import React from 'react';\n\nconst WeekDay = ({dayTimestamp}) => {\n    const date = new Date(dayTimestamp * 1000);\n\n    const daysArray = ['Niedziela', 'Poniedziałek', 'Wtorek', 'Środa', 'Czwartek', 'Piątek', 'Sobota'];\n    const day = daysArray[date.getDay()];\n\n    return (\n        <div className=\"pull-left\">{day}</div>\n    )\n};\n\nexport default WeekDay;\n","import React from 'react';\n\nconst DayTemperature = ({temperature}) => {\n    const fixedTempDay = temperature.day.toFixed();\n    return (\n        <div className=\"pull-right\">{fixedTempDay}°C</div>\n    )\n};\n\nexport default DayTemperature;\n","import React from 'react';\nimport NextDay from './NextDay';\nimport WeatherIcon from './WeatherIcon';\nimport WeekDay from './WeekDay';\nimport DayTemperature from './DayTemperature';\n\nclass OneDay extends React.Component {\n    render() {\n        const {dayData, day} = this.props;\n\n        return (\n            <div className=\"col-md-4 col-sm-4 tile-wrapper\">\n                <div className=\"tiles red weather-widget\">\n                    <div className=\"tiles-body\">\n                        <NextDay dayTimestamp={dayData.dt} day={day}/>\n                        <div className=\"heading\">\n                            <WeekDay dayTimestamp={dayData.dt} />\n                            <WeatherIcon weather={dayData.weather[0]} />\n                            <DayTemperature temperature={dayData.temp}/>\n                            <div className=\"clearfix\" />\n                        </div>\n                    </div>\n                    <div className=\"tile-footer\">\n                        <div className=\"pull-left\">\n                            <div>Wiatr: {dayData.speed} m/s</div>\n                            <div>Zachmurzenie: {dayData.clouds}%</div>\n                        </div>\n                        <div className=\"pull-right\">\n                            <canvas id=\"rain\" width=\"32\" height=\"32\"></canvas>\n                            {/* todo nie wyswietlaj nic jezeli wilgotnosc 0% (dni 5+) */}\n                            <span className=\"text-white small-text-description\">Wilgotność: {dayData.humidity}%</span></div>\n                        <div className=\"clearfix\"></div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default OneDay;\n","import React from 'react';\n\nimport Loader from '../loader/loader';\nimport OneDay from './OneDay';\n\nconst DailyForecast = ({dailyForecast}) => {\n    let days = undefined;\n    if (dailyForecast !== undefined && dailyForecast.hasOwnProperty('list')) {\n        days = dailyForecast.list.map((item, index) => {\n            return <OneDay dayData={item} day={index} key={index}/>\n        })\n    } else {\n        days = <Loader/>\n    }\n\n    return (\n        <div className=\"forecast-wrapper\">\n            {days}\n            <div className=\"clearfix\" />\n        </div>\n    )\n};\n\nexport default DailyForecast;\n","import React from 'react';\n\nconst weatherDetails = ({name, main, weather, wind}) => {\n    const iconUrl = `http://openweathermap.org/img/w/${weather.icon}.png`;\n\n    return (\n        <div>\n            <div className=\"row\">\n                <div className=\"col-md-12 tile-wrapper\">\n                    <div className=\"tiles red weather-widget\">\n                        <div className=\"tiles-body\">\n                            <div className=\"tiles-title\">Teraz - {weather.description}</div>\n                            <div className=\"heading\">\n                                <div className=\"pull-left\">{name}</div>\n                                <img src={iconUrl} alt=\"sky is clear\"\n                                     className=\"pull-right\" />\n                                <div className=\"pull-right\">{(main.temp).toFixed()}°C</div>\n                                <div className=\"clearfix\"></div></div>\n                        </div>\n                        <div className=\"tile-footer\">\n                            <div className=\"pull-left\">\n                                <div>Wiatr: {wind.speed} m/s</div>\n                                <div>Zachmurzenie: 0%</div>\n                            </div>\n                            <div className=\"pull-right\">\n                                <div>Wilgotność: {main.humidity}%</div>\n                                <div>Ciśnienie: {main.pressure} hPa</div>\n                            </div>\n                            <div className=\"clearfix\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n)\n};\n\nexport default weatherDetails;\n","import React from 'react';\nimport WeatherDetails from './weatherDetails';\n\nconst currentWeather = ({weather}) => {\n    let weatherDetails;\n\n    if (weather && weather.hasOwnProperty('main')) {\n        weatherDetails = <WeatherDetails name={weather.name} main={weather.main} weather={weather.weather[0]} wind={weather.wind}/>;\n    }\n\n    return (\n        <div className=\"current-weather\">\n            {weatherDetails}\n        </div>\n    )\n};\n\nexport default currentWeather;","import React from 'react';\n\nimport Loader from '../loader/loader';\nimport CurrentWeather from './CurrentWeather';\n\nconst currentWeatherWrapper = ({weather}) => {\n    if (weather.length > 0 && weather[0].hasOwnProperty('weather')) {\n        return <CurrentWeather weather={weather[0]}/>\n    }\n\n    return <Loader/>\n\n};\n\nexport default currentWeatherWrapper;","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\n\nimport FetchWeather from './containers/fetchWeather';\n\nimport SearchBar from './components/searchBar';\n// import ForecastWeather from './components/forecastWeather/ForecastWeatherWrapper';\nimport DailyForecast from './components/dailyForecast/DailyForecast';\nimport CurrentWeatherWrapper from './components/currentWeather/CurrentWeatherWrapper';\n\nclass App extends Component {\n    render() {\n        return (\n            <div id=\"app\">\n                <FetchWeather/>\n                <SearchBar />\n\n                <CurrentWeatherWrapper weather={this.props.weather}/>\n                <DailyForecast dailyForecast={this.props.dailyForecast}/>\n                {/*<ForecastWeather forecast={this.props.forecast}/>*/}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        loading: state.loading,\n        weather: state.weather,\n        forecast: state.forecast,\n        dailyForecast: state.dailyForecast,\n        cityFound: state.cityFound\n    }\n};\n\nexport default connect(mapStateToProps)(App);\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './reducers/rootReducer';\nimport App from './App';\nimport './styles/main.css';\nimport registerServiceWorker from './registerServiceWorker';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('weather-app'));\nregisterServiceWorker();\n"],"sourceRoot":""}